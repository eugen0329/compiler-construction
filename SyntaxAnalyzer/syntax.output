Terminals unused in grammar

   THEN
   ELIF
   END
   EXIT


Grammar

    0 $accept: statements $end

    1 statements: statements statement
    2           | %empty

    3 statement: expression_statement
    4          | declaration_statement
    5          | selection_statement
    6          | loop_statement
    7          | proc_statement

    8 proc_statement: FU ID '(' arg_expr_list ')' statements END_BL

    9 selection_statement: IF expression_statement statements END_BL
   10                    | IF expression_statement statements ELS statements END_BL

   11 loop_statement: FOR expression IN expression_statement statements END_BL

   12 declaration_statement: type_spec declaration_list delimiter

   13 type_spec: INT
   14          | FLOAT
   15          | STRING

   16 declaration_list: declarator
   17                 | declarator ',' declaration_list

   18 declarator: ID
   19           | ID '=' initializer

   20 initializer: expression

   21 expression_statement: delimiter
   22                     | expression delimiter

   23 expression: assignment_expression
   24           | error

   25 assignment_expression: logical_expression
   26                      | ID '=' assignment_expression

   27 logical_expression: additive_expr
   28                   | logical_expression EQ additive_expr
   29                   | logical_expression LE additive_expr
   30                   | logical_expression GE additive_expr
   31                   | logical_expression NE additive_expr
   32                   | logical_expression '>' additive_expr
   33                   | logical_expression '<' additive_expr

   34 additive_expr: multiplicative_expr
   35              | additive_expr '+' multiplicative_expr
   36              | additive_expr '-' multiplicative_expr

   37 multiplicative_expr: unary_expr
   38                    | multiplicative_expr '*' unary_expr
   39                    | multiplicative_expr '/' unary_expr

   40 unary_expr: postfix_expr
   41           | STRING_LITER
   42           | NUM_LITER
   43           | FLOAT_LITER
   44           | '-' unary_expr
   45           | '!' unary_expr
   46           | '(' expression ')'

   47 postfix_expr: postfix_expr '[' expression ']'
   48             | postfix_expr '.' ID
   49             | ID
   50             | postfix_expr '(' arg_expr_list ')'

   51 arg_expr_list: assignment_expression
   52              | arg_expr_list ',' assignment_expression
   53              | %empty

   54 delimiter: '\n'
   55          | ';'


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 54
'!' (33) 45
'(' (40) 8 46 50
')' (41) 8 46 50
'*' (42) 38
'+' (43) 35
',' (44) 17 52
'-' (45) 36 44
'.' (46) 48
'/' (47) 39
';' (59) 55
'<' (60) 33
'=' (61) 19 26
'>' (62) 32
'[' (91) 47
']' (93) 47
error (256) 24
IF (258) 9 10
THEN (259)
ELIF (260)
ELS (261) 10
END (262)
FU (263) 8
FOR (264) 11
IN (265) 11
END_BL (266) 8 9 10 11
EXIT (267)
INT (268) 13
FLOAT (269) 14
STRING (270) 15
EQ (271) 28
LE (272) 29
GE (273) 30
NE (274) 31
STRING_LITER (275) 41
FLOAT_LITER (276) 43
NUM_LITER (277) 42
ID (278) 8 18 19 26 48 49


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
statements (41)
    on left: 1 2, on right: 0 1 8 9 10 11
statement (42)
    on left: 3 4 5 6 7, on right: 1
proc_statement (43)
    on left: 8, on right: 7
selection_statement (44)
    on left: 9 10, on right: 5
loop_statement (45)
    on left: 11, on right: 6
declaration_statement (46)
    on left: 12, on right: 4
type_spec (47)
    on left: 13 14 15, on right: 12
declaration_list (48)
    on left: 16 17, on right: 12 17
declarator (49)
    on left: 18 19, on right: 16 17
initializer (50)
    on left: 20, on right: 19
expression_statement (51)
    on left: 21 22, on right: 3 9 10 11
expression (52)
    on left: 23 24, on right: 11 20 22 46 47
assignment_expression (53)
    on left: 25 26, on right: 23 26 51 52
logical_expression (54)
    on left: 27 28 29 30 31 32 33, on right: 25 28 29 30 31 32 33
additive_expr (55)
    on left: 34 35 36, on right: 27 28 29 30 31 32 33 35 36
multiplicative_expr (56)
    on left: 37 38 39, on right: 34 35 36 38 39
unary_expr (57)
    on left: 40 41 42 43 44 45 46, on right: 37 38 39 44 45
postfix_expr (58)
    on left: 47 48 49 50, on right: 40 47 48 50
arg_expr_list (59)
    on left: 51 52 53, on right: 8 50 52
delimiter (60)
    on left: 54 55, on right: 12 21 22


State 0

    0 $accept: . statements $end

    $default  reduce using rule 2 (statements)

    statements  go to state 1


State 1

    0 $accept: statements . $end
    1 statements: statements . statement

    $end          shift, and go to state 2
    error         shift, and go to state 3
    IF            shift, and go to state 4
    FU            shift, and go to state 5
    FOR           shift, and go to state 6
    INT           shift, and go to state 7
    FLOAT         shift, and go to state 8
    STRING        shift, and go to state 9
    STRING_LITER  shift, and go to state 10
    FLOAT_LITER   shift, and go to state 11
    NUM_LITER     shift, and go to state 12
    ID            shift, and go to state 13
    '('           shift, and go to state 14
    '-'           shift, and go to state 15
    '!'           shift, and go to state 16
    '\n'          shift, and go to state 17
    ';'           shift, and go to state 18

    statement              go to state 19
    proc_statement         go to state 20
    selection_statement    go to state 21
    loop_statement         go to state 22
    declaration_statement  go to state 23
    type_spec              go to state 24
    expression_statement   go to state 25
    expression             go to state 26
    assignment_expression  go to state 27
    logical_expression     go to state 28
    additive_expr          go to state 29
    multiplicative_expr    go to state 30
    unary_expr             go to state 31
    postfix_expr           go to state 32
    delimiter              go to state 33


State 2

    0 $accept: statements $end .

    $default  accept


State 3

   24 expression: error .

    $default  reduce using rule 24 (expression)


State 4

    9 selection_statement: IF . expression_statement statements END_BL
   10                    | IF . expression_statement statements ELS statements END_BL

    error         shift, and go to state 3
    STRING_LITER  shift, and go to state 10
    FLOAT_LITER   shift, and go to state 11
    NUM_LITER     shift, and go to state 12
    ID            shift, and go to state 13
    '('           shift, and go to state 14
    '-'           shift, and go to state 15
    '!'           shift, and go to state 16
    '\n'          shift, and go to state 17
    ';'           shift, and go to state 18

    expression_statement   go to state 34
    expression             go to state 26
    assignment_expression  go to state 27
    logical_expression     go to state 28
    additive_expr          go to state 29
    multiplicative_expr    go to state 30
    unary_expr             go to state 31
    postfix_expr           go to state 32
    delimiter              go to state 33


State 5

    8 proc_statement: FU . ID '(' arg_expr_list ')' statements END_BL

    ID  shift, and go to state 35


State 6

   11 loop_statement: FOR . expression IN expression_statement statements END_BL

    error         shift, and go to state 3
    STRING_LITER  shift, and go to state 10
    FLOAT_LITER   shift, and go to state 11
    NUM_LITER     shift, and go to state 12
    ID            shift, and go to state 13
    '('           shift, and go to state 14
    '-'           shift, and go to state 15
    '!'           shift, and go to state 16

    expression             go to state 36
    assignment_expression  go to state 27
    logical_expression     go to state 28
    additive_expr          go to state 29
    multiplicative_expr    go to state 30
    unary_expr             go to state 31
    postfix_expr           go to state 32


State 7

   13 type_spec: INT .

    $default  reduce using rule 13 (type_spec)


State 8

   14 type_spec: FLOAT .

    $default  reduce using rule 14 (type_spec)


State 9

   15 type_spec: STRING .

    $default  reduce using rule 15 (type_spec)


State 10

   41 unary_expr: STRING_LITER .

    $default  reduce using rule 41 (unary_expr)


State 11

   43 unary_expr: FLOAT_LITER .

    $default  reduce using rule 43 (unary_expr)


State 12

   42 unary_expr: NUM_LITER .

    $default  reduce using rule 42 (unary_expr)


State 13

   26 assignment_expression: ID . '=' assignment_expression
   49 postfix_expr: ID .

    '='  shift, and go to state 37

    $default  reduce using rule 49 (postfix_expr)


State 14

   46 unary_expr: '(' . expression ')'

    error         shift, and go to state 3
    STRING_LITER  shift, and go to state 10
    FLOAT_LITER   shift, and go to state 11
    NUM_LITER     shift, and go to state 12
    ID            shift, and go to state 13
    '('           shift, and go to state 14
    '-'           shift, and go to state 15
    '!'           shift, and go to state 16

    expression             go to state 38
    assignment_expression  go to state 27
    logical_expression     go to state 28
    additive_expr          go to state 29
    multiplicative_expr    go to state 30
    unary_expr             go to state 31
    postfix_expr           go to state 32


State 15

   44 unary_expr: '-' . unary_expr

    STRING_LITER  shift, and go to state 10
    FLOAT_LITER   shift, and go to state 11
    NUM_LITER     shift, and go to state 12
    ID            shift, and go to state 39
    '('           shift, and go to state 14
    '-'           shift, and go to state 15
    '!'           shift, and go to state 16

    unary_expr    go to state 40
    postfix_expr  go to state 32


State 16

   45 unary_expr: '!' . unary_expr

    STRING_LITER  shift, and go to state 10
    FLOAT_LITER   shift, and go to state 11
    NUM_LITER     shift, and go to state 12
    ID            shift, and go to state 39
    '('           shift, and go to state 14
    '-'           shift, and go to state 15
    '!'           shift, and go to state 16

    unary_expr    go to state 41
    postfix_expr  go to state 32


State 17

   54 delimiter: '\n' .

    $default  reduce using rule 54 (delimiter)


State 18

   55 delimiter: ';' .

    $default  reduce using rule 55 (delimiter)


State 19

    1 statements: statements statement .

    $default  reduce using rule 1 (statements)


State 20

    7 statement: proc_statement .

    $default  reduce using rule 7 (statement)


State 21

    5 statement: selection_statement .

    $default  reduce using rule 5 (statement)


State 22

    6 statement: loop_statement .

    $default  reduce using rule 6 (statement)


State 23

    4 statement: declaration_statement .

    $default  reduce using rule 4 (statement)


State 24

   12 declaration_statement: type_spec . declaration_list delimiter

    ID  shift, and go to state 42

    declaration_list  go to state 43
    declarator        go to state 44


State 25

    3 statement: expression_statement .

    $default  reduce using rule 3 (statement)


State 26

   22 expression_statement: expression . delimiter

    '\n'  shift, and go to state 17
    ';'   shift, and go to state 18

    delimiter  go to state 45


State 27

   23 expression: assignment_expression .

    $default  reduce using rule 23 (expression)


State 28

   25 assignment_expression: logical_expression .
   28 logical_expression: logical_expression . EQ additive_expr
   29                   | logical_expression . LE additive_expr
   30                   | logical_expression . GE additive_expr
   31                   | logical_expression . NE additive_expr
   32                   | logical_expression . '>' additive_expr
   33                   | logical_expression . '<' additive_expr

    EQ   shift, and go to state 46
    LE   shift, and go to state 47
    GE   shift, and go to state 48
    NE   shift, and go to state 49
    '>'  shift, and go to state 50
    '<'  shift, and go to state 51

    $default  reduce using rule 25 (assignment_expression)


State 29

   27 logical_expression: additive_expr .
   35 additive_expr: additive_expr . '+' multiplicative_expr
   36              | additive_expr . '-' multiplicative_expr

    '+'  shift, and go to state 52
    '-'  shift, and go to state 53

    $default  reduce using rule 27 (logical_expression)


State 30

   34 additive_expr: multiplicative_expr .
   38 multiplicative_expr: multiplicative_expr . '*' unary_expr
   39                    | multiplicative_expr . '/' unary_expr

    '*'  shift, and go to state 54
    '/'  shift, and go to state 55

    $default  reduce using rule 34 (additive_expr)


State 31

   37 multiplicative_expr: unary_expr .

    $default  reduce using rule 37 (multiplicative_expr)


State 32

   40 unary_expr: postfix_expr .
   47 postfix_expr: postfix_expr . '[' expression ']'
   48             | postfix_expr . '.' ID
   50             | postfix_expr . '(' arg_expr_list ')'

    '('  shift, and go to state 56
    '['  shift, and go to state 57
    '.'  shift, and go to state 58

    $default  reduce using rule 40 (unary_expr)


State 33

   21 expression_statement: delimiter .

    $default  reduce using rule 21 (expression_statement)


State 34

    9 selection_statement: IF expression_statement . statements END_BL
   10                    | IF expression_statement . statements ELS statements END_BL

    $default  reduce using rule 2 (statements)

    statements  go to state 59


State 35

    8 proc_statement: FU ID . '(' arg_expr_list ')' statements END_BL

    '('  shift, and go to state 60


State 36

   11 loop_statement: FOR expression . IN expression_statement statements END_BL

    IN  shift, and go to state 61


State 37

   26 assignment_expression: ID '=' . assignment_expression

    STRING_LITER  shift, and go to state 10
    FLOAT_LITER   shift, and go to state 11
    NUM_LITER     shift, and go to state 12
    ID            shift, and go to state 13
    '('           shift, and go to state 14
    '-'           shift, and go to state 15
    '!'           shift, and go to state 16

    assignment_expression  go to state 62
    logical_expression     go to state 28
    additive_expr          go to state 29
    multiplicative_expr    go to state 30
    unary_expr             go to state 31
    postfix_expr           go to state 32


State 38

   46 unary_expr: '(' expression . ')'

    ')'  shift, and go to state 63


State 39

   49 postfix_expr: ID .

    $default  reduce using rule 49 (postfix_expr)


State 40

   44 unary_expr: '-' unary_expr .

    $default  reduce using rule 44 (unary_expr)


State 41

   45 unary_expr: '!' unary_expr .

    $default  reduce using rule 45 (unary_expr)


State 42

   18 declarator: ID .
   19           | ID . '=' initializer

    '='  shift, and go to state 64

    $default  reduce using rule 18 (declarator)


State 43

   12 declaration_statement: type_spec declaration_list . delimiter

    '\n'  shift, and go to state 17
    ';'   shift, and go to state 18

    delimiter  go to state 65


State 44

   16 declaration_list: declarator .
   17                 | declarator . ',' declaration_list

    ','  shift, and go to state 66

    $default  reduce using rule 16 (declaration_list)


State 45

   22 expression_statement: expression delimiter .

    $default  reduce using rule 22 (expression_statement)


State 46

   28 logical_expression: logical_expression EQ . additive_expr

    STRING_LITER  shift, and go to state 10
    FLOAT_LITER   shift, and go to state 11
    NUM_LITER     shift, and go to state 12
    ID            shift, and go to state 39
    '('           shift, and go to state 14
    '-'           shift, and go to state 15
    '!'           shift, and go to state 16

    additive_expr        go to state 67
    multiplicative_expr  go to state 30
    unary_expr           go to state 31
    postfix_expr         go to state 32


State 47

   29 logical_expression: logical_expression LE . additive_expr

    STRING_LITER  shift, and go to state 10
    FLOAT_LITER   shift, and go to state 11
    NUM_LITER     shift, and go to state 12
    ID            shift, and go to state 39
    '('           shift, and go to state 14
    '-'           shift, and go to state 15
    '!'           shift, and go to state 16

    additive_expr        go to state 68
    multiplicative_expr  go to state 30
    unary_expr           go to state 31
    postfix_expr         go to state 32


State 48

   30 logical_expression: logical_expression GE . additive_expr

    STRING_LITER  shift, and go to state 10
    FLOAT_LITER   shift, and go to state 11
    NUM_LITER     shift, and go to state 12
    ID            shift, and go to state 39
    '('           shift, and go to state 14
    '-'           shift, and go to state 15
    '!'           shift, and go to state 16

    additive_expr        go to state 69
    multiplicative_expr  go to state 30
    unary_expr           go to state 31
    postfix_expr         go to state 32


State 49

   31 logical_expression: logical_expression NE . additive_expr

    STRING_LITER  shift, and go to state 10
    FLOAT_LITER   shift, and go to state 11
    NUM_LITER     shift, and go to state 12
    ID            shift, and go to state 39
    '('           shift, and go to state 14
    '-'           shift, and go to state 15
    '!'           shift, and go to state 16

    additive_expr        go to state 70
    multiplicative_expr  go to state 30
    unary_expr           go to state 31
    postfix_expr         go to state 32


State 50

   32 logical_expression: logical_expression '>' . additive_expr

    STRING_LITER  shift, and go to state 10
    FLOAT_LITER   shift, and go to state 11
    NUM_LITER     shift, and go to state 12
    ID            shift, and go to state 39
    '('           shift, and go to state 14
    '-'           shift, and go to state 15
    '!'           shift, and go to state 16

    additive_expr        go to state 71
    multiplicative_expr  go to state 30
    unary_expr           go to state 31
    postfix_expr         go to state 32


State 51

   33 logical_expression: logical_expression '<' . additive_expr

    STRING_LITER  shift, and go to state 10
    FLOAT_LITER   shift, and go to state 11
    NUM_LITER     shift, and go to state 12
    ID            shift, and go to state 39
    '('           shift, and go to state 14
    '-'           shift, and go to state 15
    '!'           shift, and go to state 16

    additive_expr        go to state 72
    multiplicative_expr  go to state 30
    unary_expr           go to state 31
    postfix_expr         go to state 32


State 52

   35 additive_expr: additive_expr '+' . multiplicative_expr

    STRING_LITER  shift, and go to state 10
    FLOAT_LITER   shift, and go to state 11
    NUM_LITER     shift, and go to state 12
    ID            shift, and go to state 39
    '('           shift, and go to state 14
    '-'           shift, and go to state 15
    '!'           shift, and go to state 16

    multiplicative_expr  go to state 73
    unary_expr           go to state 31
    postfix_expr         go to state 32


State 53

   36 additive_expr: additive_expr '-' . multiplicative_expr

    STRING_LITER  shift, and go to state 10
    FLOAT_LITER   shift, and go to state 11
    NUM_LITER     shift, and go to state 12
    ID            shift, and go to state 39
    '('           shift, and go to state 14
    '-'           shift, and go to state 15
    '!'           shift, and go to state 16

    multiplicative_expr  go to state 74
    unary_expr           go to state 31
    postfix_expr         go to state 32


State 54

   38 multiplicative_expr: multiplicative_expr '*' . unary_expr

    STRING_LITER  shift, and go to state 10
    FLOAT_LITER   shift, and go to state 11
    NUM_LITER     shift, and go to state 12
    ID            shift, and go to state 39
    '('           shift, and go to state 14
    '-'           shift, and go to state 15
    '!'           shift, and go to state 16

    unary_expr    go to state 75
    postfix_expr  go to state 32


State 55

   39 multiplicative_expr: multiplicative_expr '/' . unary_expr

    STRING_LITER  shift, and go to state 10
    FLOAT_LITER   shift, and go to state 11
    NUM_LITER     shift, and go to state 12
    ID            shift, and go to state 39
    '('           shift, and go to state 14
    '-'           shift, and go to state 15
    '!'           shift, and go to state 16

    unary_expr    go to state 76
    postfix_expr  go to state 32


State 56

   50 postfix_expr: postfix_expr '(' . arg_expr_list ')'

    STRING_LITER  shift, and go to state 10
    FLOAT_LITER   shift, and go to state 11
    NUM_LITER     shift, and go to state 12
    ID            shift, and go to state 13
    '('           shift, and go to state 14
    '-'           shift, and go to state 15
    '!'           shift, and go to state 16

    $default  reduce using rule 53 (arg_expr_list)

    assignment_expression  go to state 77
    logical_expression     go to state 28
    additive_expr          go to state 29
    multiplicative_expr    go to state 30
    unary_expr             go to state 31
    postfix_expr           go to state 32
    arg_expr_list          go to state 78


State 57

   47 postfix_expr: postfix_expr '[' . expression ']'

    error         shift, and go to state 3
    STRING_LITER  shift, and go to state 10
    FLOAT_LITER   shift, and go to state 11
    NUM_LITER     shift, and go to state 12
    ID            shift, and go to state 13
    '('           shift, and go to state 14
    '-'           shift, and go to state 15
    '!'           shift, and go to state 16

    expression             go to state 79
    assignment_expression  go to state 27
    logical_expression     go to state 28
    additive_expr          go to state 29
    multiplicative_expr    go to state 30
    unary_expr             go to state 31
    postfix_expr           go to state 32


State 58

   48 postfix_expr: postfix_expr '.' . ID

    ID  shift, and go to state 80


State 59

    1 statements: statements . statement
    9 selection_statement: IF expression_statement statements . END_BL
   10                    | IF expression_statement statements . ELS statements END_BL

    error         shift, and go to state 3
    IF            shift, and go to state 4
    ELS           shift, and go to state 81
    FU            shift, and go to state 5
    FOR           shift, and go to state 6
    END_BL        shift, and go to state 82
    INT           shift, and go to state 7
    FLOAT         shift, and go to state 8
    STRING        shift, and go to state 9
    STRING_LITER  shift, and go to state 10
    FLOAT_LITER   shift, and go to state 11
    NUM_LITER     shift, and go to state 12
    ID            shift, and go to state 13
    '('           shift, and go to state 14
    '-'           shift, and go to state 15
    '!'           shift, and go to state 16
    '\n'          shift, and go to state 17
    ';'           shift, and go to state 18

    statement              go to state 19
    proc_statement         go to state 20
    selection_statement    go to state 21
    loop_statement         go to state 22
    declaration_statement  go to state 23
    type_spec              go to state 24
    expression_statement   go to state 25
    expression             go to state 26
    assignment_expression  go to state 27
    logical_expression     go to state 28
    additive_expr          go to state 29
    multiplicative_expr    go to state 30
    unary_expr             go to state 31
    postfix_expr           go to state 32
    delimiter              go to state 33


State 60

    8 proc_statement: FU ID '(' . arg_expr_list ')' statements END_BL

    STRING_LITER  shift, and go to state 10
    FLOAT_LITER   shift, and go to state 11
    NUM_LITER     shift, and go to state 12
    ID            shift, and go to state 13
    '('           shift, and go to state 14
    '-'           shift, and go to state 15
    '!'           shift, and go to state 16

    $default  reduce using rule 53 (arg_expr_list)

    assignment_expression  go to state 77
    logical_expression     go to state 28
    additive_expr          go to state 29
    multiplicative_expr    go to state 30
    unary_expr             go to state 31
    postfix_expr           go to state 32
    arg_expr_list          go to state 83


State 61

   11 loop_statement: FOR expression IN . expression_statement statements END_BL

    error         shift, and go to state 3
    STRING_LITER  shift, and go to state 10
    FLOAT_LITER   shift, and go to state 11
    NUM_LITER     shift, and go to state 12
    ID            shift, and go to state 13
    '('           shift, and go to state 14
    '-'           shift, and go to state 15
    '!'           shift, and go to state 16
    '\n'          shift, and go to state 17
    ';'           shift, and go to state 18

    expression_statement   go to state 84
    expression             go to state 26
    assignment_expression  go to state 27
    logical_expression     go to state 28
    additive_expr          go to state 29
    multiplicative_expr    go to state 30
    unary_expr             go to state 31
    postfix_expr           go to state 32
    delimiter              go to state 33


State 62

   26 assignment_expression: ID '=' assignment_expression .

    $default  reduce using rule 26 (assignment_expression)


State 63

   46 unary_expr: '(' expression ')' .

    $default  reduce using rule 46 (unary_expr)


State 64

   19 declarator: ID '=' . initializer

    error         shift, and go to state 3
    STRING_LITER  shift, and go to state 10
    FLOAT_LITER   shift, and go to state 11
    NUM_LITER     shift, and go to state 12
    ID            shift, and go to state 13
    '('           shift, and go to state 14
    '-'           shift, and go to state 15
    '!'           shift, and go to state 16

    initializer            go to state 85
    expression             go to state 86
    assignment_expression  go to state 27
    logical_expression     go to state 28
    additive_expr          go to state 29
    multiplicative_expr    go to state 30
    unary_expr             go to state 31
    postfix_expr           go to state 32


State 65

   12 declaration_statement: type_spec declaration_list delimiter .

    $default  reduce using rule 12 (declaration_statement)


State 66

   17 declaration_list: declarator ',' . declaration_list

    ID  shift, and go to state 42

    declaration_list  go to state 87
    declarator        go to state 44


State 67

   28 logical_expression: logical_expression EQ additive_expr .
   35 additive_expr: additive_expr . '+' multiplicative_expr
   36              | additive_expr . '-' multiplicative_expr

    '+'  shift, and go to state 52
    '-'  shift, and go to state 53

    $default  reduce using rule 28 (logical_expression)


State 68

   29 logical_expression: logical_expression LE additive_expr .
   35 additive_expr: additive_expr . '+' multiplicative_expr
   36              | additive_expr . '-' multiplicative_expr

    '+'  shift, and go to state 52
    '-'  shift, and go to state 53

    $default  reduce using rule 29 (logical_expression)


State 69

   30 logical_expression: logical_expression GE additive_expr .
   35 additive_expr: additive_expr . '+' multiplicative_expr
   36              | additive_expr . '-' multiplicative_expr

    '+'  shift, and go to state 52
    '-'  shift, and go to state 53

    $default  reduce using rule 30 (logical_expression)


State 70

   31 logical_expression: logical_expression NE additive_expr .
   35 additive_expr: additive_expr . '+' multiplicative_expr
   36              | additive_expr . '-' multiplicative_expr

    '+'  shift, and go to state 52
    '-'  shift, and go to state 53

    $default  reduce using rule 31 (logical_expression)


State 71

   32 logical_expression: logical_expression '>' additive_expr .
   35 additive_expr: additive_expr . '+' multiplicative_expr
   36              | additive_expr . '-' multiplicative_expr

    '+'  shift, and go to state 52
    '-'  shift, and go to state 53

    $default  reduce using rule 32 (logical_expression)


State 72

   33 logical_expression: logical_expression '<' additive_expr .
   35 additive_expr: additive_expr . '+' multiplicative_expr
   36              | additive_expr . '-' multiplicative_expr

    '+'  shift, and go to state 52
    '-'  shift, and go to state 53

    $default  reduce using rule 33 (logical_expression)


State 73

   35 additive_expr: additive_expr '+' multiplicative_expr .
   38 multiplicative_expr: multiplicative_expr . '*' unary_expr
   39                    | multiplicative_expr . '/' unary_expr

    '*'  shift, and go to state 54
    '/'  shift, and go to state 55

    $default  reduce using rule 35 (additive_expr)


State 74

   36 additive_expr: additive_expr '-' multiplicative_expr .
   38 multiplicative_expr: multiplicative_expr . '*' unary_expr
   39                    | multiplicative_expr . '/' unary_expr

    '*'  shift, and go to state 54
    '/'  shift, and go to state 55

    $default  reduce using rule 36 (additive_expr)


State 75

   38 multiplicative_expr: multiplicative_expr '*' unary_expr .

    $default  reduce using rule 38 (multiplicative_expr)


State 76

   39 multiplicative_expr: multiplicative_expr '/' unary_expr .

    $default  reduce using rule 39 (multiplicative_expr)


State 77

   51 arg_expr_list: assignment_expression .

    $default  reduce using rule 51 (arg_expr_list)


State 78

   50 postfix_expr: postfix_expr '(' arg_expr_list . ')'
   52 arg_expr_list: arg_expr_list . ',' assignment_expression

    ')'  shift, and go to state 88
    ','  shift, and go to state 89


State 79

   47 postfix_expr: postfix_expr '[' expression . ']'

    ']'  shift, and go to state 90


State 80

   48 postfix_expr: postfix_expr '.' ID .

    $default  reduce using rule 48 (postfix_expr)


State 81

   10 selection_statement: IF expression_statement statements ELS . statements END_BL

    $default  reduce using rule 2 (statements)

    statements  go to state 91


State 82

    9 selection_statement: IF expression_statement statements END_BL .

    $default  reduce using rule 9 (selection_statement)


State 83

    8 proc_statement: FU ID '(' arg_expr_list . ')' statements END_BL
   52 arg_expr_list: arg_expr_list . ',' assignment_expression

    ')'  shift, and go to state 92
    ','  shift, and go to state 89


State 84

   11 loop_statement: FOR expression IN expression_statement . statements END_BL

    $default  reduce using rule 2 (statements)

    statements  go to state 93


State 85

   19 declarator: ID '=' initializer .

    $default  reduce using rule 19 (declarator)


State 86

   20 initializer: expression .

    $default  reduce using rule 20 (initializer)


State 87

   17 declaration_list: declarator ',' declaration_list .

    $default  reduce using rule 17 (declaration_list)


State 88

   50 postfix_expr: postfix_expr '(' arg_expr_list ')' .

    $default  reduce using rule 50 (postfix_expr)


State 89

   52 arg_expr_list: arg_expr_list ',' . assignment_expression

    STRING_LITER  shift, and go to state 10
    FLOAT_LITER   shift, and go to state 11
    NUM_LITER     shift, and go to state 12
    ID            shift, and go to state 13
    '('           shift, and go to state 14
    '-'           shift, and go to state 15
    '!'           shift, and go to state 16

    assignment_expression  go to state 94
    logical_expression     go to state 28
    additive_expr          go to state 29
    multiplicative_expr    go to state 30
    unary_expr             go to state 31
    postfix_expr           go to state 32


State 90

   47 postfix_expr: postfix_expr '[' expression ']' .

    $default  reduce using rule 47 (postfix_expr)


State 91

    1 statements: statements . statement
   10 selection_statement: IF expression_statement statements ELS statements . END_BL

    error         shift, and go to state 3
    IF            shift, and go to state 4
    FU            shift, and go to state 5
    FOR           shift, and go to state 6
    END_BL        shift, and go to state 95
    INT           shift, and go to state 7
    FLOAT         shift, and go to state 8
    STRING        shift, and go to state 9
    STRING_LITER  shift, and go to state 10
    FLOAT_LITER   shift, and go to state 11
    NUM_LITER     shift, and go to state 12
    ID            shift, and go to state 13
    '('           shift, and go to state 14
    '-'           shift, and go to state 15
    '!'           shift, and go to state 16
    '\n'          shift, and go to state 17
    ';'           shift, and go to state 18

    statement              go to state 19
    proc_statement         go to state 20
    selection_statement    go to state 21
    loop_statement         go to state 22
    declaration_statement  go to state 23
    type_spec              go to state 24
    expression_statement   go to state 25
    expression             go to state 26
    assignment_expression  go to state 27
    logical_expression     go to state 28
    additive_expr          go to state 29
    multiplicative_expr    go to state 30
    unary_expr             go to state 31
    postfix_expr           go to state 32
    delimiter              go to state 33


State 92

    8 proc_statement: FU ID '(' arg_expr_list ')' . statements END_BL

    $default  reduce using rule 2 (statements)

    statements  go to state 96


State 93

    1 statements: statements . statement
   11 loop_statement: FOR expression IN expression_statement statements . END_BL

    error         shift, and go to state 3
    IF            shift, and go to state 4
    FU            shift, and go to state 5
    FOR           shift, and go to state 6
    END_BL        shift, and go to state 97
    INT           shift, and go to state 7
    FLOAT         shift, and go to state 8
    STRING        shift, and go to state 9
    STRING_LITER  shift, and go to state 10
    FLOAT_LITER   shift, and go to state 11
    NUM_LITER     shift, and go to state 12
    ID            shift, and go to state 13
    '('           shift, and go to state 14
    '-'           shift, and go to state 15
    '!'           shift, and go to state 16
    '\n'          shift, and go to state 17
    ';'           shift, and go to state 18

    statement              go to state 19
    proc_statement         go to state 20
    selection_statement    go to state 21
    loop_statement         go to state 22
    declaration_statement  go to state 23
    type_spec              go to state 24
    expression_statement   go to state 25
    expression             go to state 26
    assignment_expression  go to state 27
    logical_expression     go to state 28
    additive_expr          go to state 29
    multiplicative_expr    go to state 30
    unary_expr             go to state 31
    postfix_expr           go to state 32
    delimiter              go to state 33


State 94

   52 arg_expr_list: arg_expr_list ',' assignment_expression .

    $default  reduce using rule 52 (arg_expr_list)


State 95

   10 selection_statement: IF expression_statement statements ELS statements END_BL .

    $default  reduce using rule 10 (selection_statement)


State 96

    1 statements: statements . statement
    8 proc_statement: FU ID '(' arg_expr_list ')' statements . END_BL

    error         shift, and go to state 3
    IF            shift, and go to state 4
    FU            shift, and go to state 5
    FOR           shift, and go to state 6
    END_BL        shift, and go to state 98
    INT           shift, and go to state 7
    FLOAT         shift, and go to state 8
    STRING        shift, and go to state 9
    STRING_LITER  shift, and go to state 10
    FLOAT_LITER   shift, and go to state 11
    NUM_LITER     shift, and go to state 12
    ID            shift, and go to state 13
    '('           shift, and go to state 14
    '-'           shift, and go to state 15
    '!'           shift, and go to state 16
    '\n'          shift, and go to state 17
    ';'           shift, and go to state 18

    statement              go to state 19
    proc_statement         go to state 20
    selection_statement    go to state 21
    loop_statement         go to state 22
    declaration_statement  go to state 23
    type_spec              go to state 24
    expression_statement   go to state 25
    expression             go to state 26
    assignment_expression  go to state 27
    logical_expression     go to state 28
    additive_expr          go to state 29
    multiplicative_expr    go to state 30
    unary_expr             go to state 31
    postfix_expr           go to state 32
    delimiter              go to state 33


State 97

   11 loop_statement: FOR expression IN expression_statement statements END_BL .

    $default  reduce using rule 11 (loop_statement)


State 98

    8 proc_statement: FU ID '(' arg_expr_list ')' statements END_BL .

    $default  reduce using rule 8 (proc_statement)
